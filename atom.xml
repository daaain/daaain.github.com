<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I am dain]]></title>
  <link href="http://danieldemmel.me/atom.xml" rel="self"/>
  <link href="http://danieldemmel.me/"/>
  <updated>2012-09-02T15:40:31+01:00</updated>
  <id>http://danieldemmel.me/</id>
  <author>
    <name><![CDATA[Daniel Demmel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up rmate with Sublime Text for remote file editing over SSH]]></title>
    <link href="http://danieldemmel.me/blog/2012/09/02/setting-up-rmate-with-sublime-text-for-remote-file-editing-over-ssh/"/>
    <updated>2012-09-02T02:20:00+01:00</updated>
    <id>http://danieldemmel.me/blog/2012/09/02/setting-up-rmate-with-sublime-text-for-remote-file-editing-over-ssh</id>
    <content type="html"><![CDATA[<p>If you want to be able to edit files using your local Sublime Text 2 app over SSH, you can use <code>rmate</code> which is a small remote connection script developed originally for TextMate.</p>

<p>This is how it goes:</p>

<ol>
<li>Install the <a href="https://github.com/henrikpersson/rsub">rsub</a> plugin for ST2, which is available through <a href="http://wbond.net/sublime_packages/package_control">Package Control</a> too.</li>
<li>Add a remote forwarding line under the right host in your <code>~/.ssh/config</code> file to enable connection: <code>RemoteForward 52698 127.0.0.1:52698</code> – see <a href="https://github.com/henrikpersson/rsub#ssh-tunneling">plugin docs</a> for a bit more info</li>
<li>SSH in to your remote: <code>ssh example_user@123.456.78.90</code></li>
<li>Download rmate: <code>curl https://raw.github.com/aurora/rmate/master/rmate &gt; rmate</code></li>
<li>Move it in place: <code>sudo mv rmate /usr/local/bin</code> – you can put in <code>~/bin</code> too if you only want to set it up for yourself, but sharing is caring :)</li>
<li>Make it executable: <code>sudo chmod +x /usr/local/bin/rmate</code></li>
<li>Profit: <code>rmate .profile</code> – make sure you have an open ST2 window to enable listening!</li>
</ol>


<p>The main reason why I really like this is because you can also <code>sudo rmate</code> with system config files and be able to actually save them back, as opposed to editing via an SFTP client where you need to log in with <code>root</code> to be able to do this.</p>

<p>Also, don&#8217;t forget to open the port in your <code>iptables</code> if you have a restrictive / whitelist firewall policy: <code>-A INPUT -p tcp --dport 52698 -j ACCEPT</code>.</p>

<p>A slightly annoying caveat is that a port can&#8217;t be shared with other people if you happen to be logged in at the same time, so you might have to set up separate ports in <code>iptables</code> with the first port number in the <code>RemoteForward</code> setting matching it (the local port should remain the same). In this case you have to specify the port number in each call though: <code>rmate -p 52699</code>. So probably the best is to create an alias in your <code>.profile</code>: <code>alias rsub='rmate -p 52699'</code>, but in this case you also need to add: <code>alias sudo='sudo '</code>. By adding that trailing space you make sure that the <code>sudo</code>&#8216;d command is also checked for alias substitution, so doing <code>sudo rsub my_system_config_file</code> will still work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Octopress]]></title>
    <link href="http://danieldemmel.me/blog/2012/05/17/setting-up-octopress/"/>
    <updated>2012-05-17T22:18:00+01:00</updated>
    <id>http://danieldemmel.me/blog/2012/05/17/setting-up-octopress</id>
    <content type="html"><![CDATA[<h2>Steps I&#8217;ve taken</h2>

<p>Note: &#8216;username&#8217; is your Github username and &#8216;myblog&#8217; is the name of your blog / site which you&#8217;ll have to replace in the instructions. Don&#8217;t sweat too much about the latter, it&#8217;s just a project name you won&#8217;t necessary have to use on your site.</p>

<h3>Set up Github repository for hosting</h3>

<p>Go to: https://github.com/new</p>

<p>Fill in form and create repo called &#8220;username.github.com&#8221;</p>

<h3>Set up Octopress <a href="http://octopress.org/docs/setup/">&#8594;</a></h3>

<p>If you don&#8217;t have it yet, install <a href="https://github.com/sstephenson/rbenv#section_2">rbenv</a> and <a href="https://github.com/sstephenson/ruby-build#installing-ruby-build">ruby-build</a> (to handle Ruby runtimes and build gems). If you&#8217;re on Windows this is going to be a bit more complicated, but setting up <a href="http://rubyinstaller.org/downloads">RubyInstaller</a> and <a href="https://github.com/oneclick/rubyinstaller/wiki/Development-Kit">Ruby Development Kit</a> is not that bad.</p>

<pre><code>$ rbenv install 1.9.2-p290
$ git clone git://github.com/imathis/octopress.git myblog
$ cd myblog
$ gem install bundler
$ rbenv rehash
$ bundle install
</code></pre>

<h3>Get a nice theme <a href="http://zespia.tw/Octopress-Theme-Slash/">&#8594;</a></h3>

<pre><code>$ git clone git://github.com/tommy351/Octopress-Theme-Slash.git .themes/slash
$ rake install['slash']
</code></pre>

<h3>Configure Octopress <a href="http://octopress.org/docs/configuring/">&#8594;</a></h3>

<p>Edit at least &#8220;Main Configs&#8221; in _config.yml. You can come back later to fill in the rest.</p>

<h3>Set site up for Github Pages</h3>

<pre><code>$ rake setup_github_pages
</code></pre>

<p>Paste your Github repo URL: git@github.com:username/username.github.com.git when prompted.</p>

<p>This will set up some folders and the structure of the Git repos. <code>Master</code> branch will track the actual generated website and <code>source</code> will be the sources you are going to edit.</p>

<h3>Create your first post <a href="http://octopress.org/docs/blogging/">&#8594;</a></h3>

<pre><code>$ rake new_post["Hello World!"]
</code></pre>

<p>Edit contents of myblog/source/_posts/yyyy-mm-dd-hello-world.markdown</p>

<h3>Generate page and see it in your browser <a href="http://octopress.org/docs/deploying/github/">&#8594;</a></h3>

<pre><code>$ rake generate
$ powify create myblog
$ powify browse myblog
</code></pre>

<p>See if it&#8217;s all good locally</p>

<pre><code>$ rake deploy
</code></pre>

<p>Check the real thing: http://username.github.com</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[puts 'Hello world']]></title>
    <link href="http://danieldemmel.me/blog/2012/05/17/puts-hello-world/"/>
    <updated>2012-05-17T21:48:00+01:00</updated>
    <id>http://danieldemmel.me/blog/2012/05/17/puts-hello-world</id>
    <content type="html"><![CDATA[<p>A brave new blog, this time powered by the impressive dream team of <a href="http://www.ruby-lang.org/">Ruby</a>, <a href="http://compass-style.org/">Compass</a>, <a href="http://jekyllrb.com/">Jekyll</a>, <a href="http://octopress.org/">Octopress</a> and <a href="https://github.com/">Github</a>.</p>

<p>No database to worry about, back up and restore. Everything is in a Git repository, kindly hosted and served up to the world by Github.</p>

<p>All content is created in <a href="http://en.wikipedia.org/wiki/Markdown">Markdown</a>, hand typed in <a href="http://mouapp.com/">Mou.app</a>.</p>
]]></content>
  </entry>
  
</feed>
